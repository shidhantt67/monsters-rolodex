{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","user","id","alt","name","CardList","users","map","SearchBox","placeholder","handleChange","type","onChange","App","state","search","fetch","then","response","json","setState","this","filteredUser","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,kBAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,0BAAiEC,IAAI,SAC7E,6BAAKL,EAAMG,KAAKG,YCDXC,EAAW,SAAAP,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACMD,EAAMQ,MAAMC,KAAI,SAAAN,GAAI,OACpB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,UCNbM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BCG,E,kDAhCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,MAAQ,GACRS,OAAS,IAJA,E,gEAOO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAX,GAAK,OAAI,EAAKc,SAAS,CAACd,MAAQA,S,+BAE9B,IAAD,SACmBe,KAAKP,MAAvBR,EADD,EACCA,MAAOS,EADR,EACQA,OACTO,EAAehB,EAAMiB,QAAO,SAAAtB,GAAI,OAClCA,EAAKG,KAAKoB,cAAcC,SAASV,EAAOS,kBAE5C,OACE,sBAAKzB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWU,YAAY,eACvBC,aAAc,SAAAgB,GACZ,EAAKN,SAAS,CAACL,OAAQW,EAAEC,OAAOC,WAElC,cAAC,EAAD,CAAUtB,MAAOgB,W,GAzBPO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.22b8a3b8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.style.css';\n\nexport const Card = props => (\n    <div className=\"card-container\">\n        <img src={`https://robohash.org/${props.user.id}?set=set2&size=180x180`} alt=\"user\"/>\n        <h1>{props.user.name}</h1>\n    </div>\n);","import React from 'react';\n\nimport './card-list.style.css';\n\nimport {Card} from '../card/card.component'\n\nexport const CardList = props => (\n    <div className=\"card-list\">\n        { props.users.map(user => (\n          <Card key={user.id} user={user}></Card>\n        )) }\n    </div>\n);","import React from 'react';\nimport './search-box.style.css';\n\nexport const SearchBox = ({ placeholder, handleChange}) => (\n    <input \n    className=\"search\"\n    type=\"search\" \n    placeholder={placeholder}\n    onChange={handleChange}\n    />\n);","import React, { Component } from 'react';\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      users : [],\n      search : \"\"\n    }\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({users : users}))\n  }\n  render() {\n    const { users, search } = this.state;\n    const filteredUser = users.filter(user => \n        user.name.toLowerCase().includes(search.toLowerCase())\n      );\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolox </h1>\n        <SearchBox placeholder=\"search users\" \n        handleChange={e => {\n          this.setState({search: e.target.value})\n        }}/>\n        <CardList users={filteredUser}>\n        \n        </CardList>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}